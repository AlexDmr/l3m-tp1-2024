{"mappings":"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","sources":["<anon>","src/main.ts","src/utils.ts"],"sourcesContent":["document.onload = ()=>console.log(\"Le document est pr\\xeat\");\nlet $df5bef30413a053b$var$PromesseDocumentPret = new Promise((resolve)=>{\n    if (document.readyState === \"complete\") resolve();\n    else document.onreadystatechange = ()=>document.readyState === \"complete\" ? resolve() : null;\n});\nfunction $df5bef30413a053b$export$27555cdfb0b84a1a(a, b) {\n    switch(typeof a){\n        case \"object\":\n            return JSON.stringify(a) === JSON.stringify(b);\n        default:\n            return a === b;\n    }\n}\nconst $df5bef30413a053b$var$template = `\n<hr/>\n<table>\n    <caption></caption>\n    <thead>\n        <th><h2></h2></th>\n    </thead>\n    <tbody></tbody>\n</table>\n`;\nfunction $df5bef30413a053b$var$toArgs(L) {\n    return L.map((v)=>JSON.stringify(v)).join(\", \");\n}\nfunction $df5bef30413a053b$export$79a47d30cde655c4(title, fct, fName, assertions) {\n    $df5bef30413a053b$var$PromesseDocumentPret.then(()=>$df5bef30413a053b$export$d5955f7983f287d4(title, fct, fName, assertions));\n}\nfunction $df5bef30413a053b$export$d5955f7983f287d4(title, fct, fName, assertions) {\n    let section = document.createElement(\"section\"), nbCorrects = 0, exceptionTriggered;\n    section.innerHTML = $df5bef30413a053b$var$template;\n    section.querySelector(\"h2\").textContent = title;\n    let tbody = section.querySelector(\"tbody\");\n    for (let { args: args, expectedResult: expectedResult, errorExpected: errorExpected } of assertions){\n        let tr = document.createElement(\"tr\");\n        let res;\n        try {\n            res = fct.apply(null, args);\n            exceptionTriggered = false;\n        } catch (err) {\n            res = err;\n            exceptionTriggered = true;\n        }\n        let tdI = document.createElement(\"td\");\n        tr.appendChild(tdI);\n        tdI.innerHTML = `<section><section class=\"root\"></section><pre class=\"actual\"></pre><pre class=\"expected\"></pre></section>`;\n        const sroot = tdI.querySelector(\".root\");\n        const expected = tdI.querySelector(\".expected\");\n        const actual = tdI.querySelector(\".actual\");\n        sroot.textContent = `${fName}( ${$df5bef30413a053b$var$toArgs(args)} )`;\n        JSON.stringify(args);\n        actual.textContent = `   |    get ${JSON.stringify(res)}`;\n        expected.textContent = `   | expect ${JSON.stringify(expectedResult)}`;\n        // let tdO = document.createElement( \"td\" ); tr.appendChild( tdO ); tdO.textContent = JSON.stringify( res );\n        // let tdE = document.createElement( \"td\" ); tr.appendChild( tdE ); tdE.textContent = JSON.stringify( expectedResult );\n        if ($df5bef30413a053b$export$27555cdfb0b84a1a(res, expectedResult) && (typeof errorExpected === \"undefined\" || exceptionTriggered === errorExpected)) {\n            tr.classList.add(\"correct\");\n            nbCorrects++;\n        } else tr.classList.add(\"incorrect\");\n        tbody.appendChild(tr);\n    }\n    section.querySelector(\"caption\").textContent = `Recap: ${nbCorrects} / ${assertions.length}`;\n    document.body.appendChild(section);\n}\n\n\n/***********************************************************************************************************************\n * Fonction qui renvoie le minimum de deux nombres\n */ function $ad2bcec7a0192558$var$min(a, b) {\n    console.log(\"Ini entre\", a, \"et\", b);\n    return NaN;\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Fonction qui renvoie le minimum de deux nombres\", $ad2bcec7a0192558$var$min, \"min\", [\n    {\n        args: [\n            17,\n            27\n        ],\n        expectedResult: 17\n    },\n    {\n        args: [\n            17,\n            15\n        ],\n        expectedResult: 15\n    },\n    {\n        args: [\n            4,\n            4\n        ],\n        expectedResult: 4\n    }\n]);\n/***********************************************************************************************************************\n * Fonction qui trie des nombres par ordre croissant\n */ function $ad2bcec7a0192558$var$triCroissant(...L) {\n    console.log(L);\n    return [];\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Fonction qui trie des nombres par ordre croissant\", $ad2bcec7a0192558$var$triCroissant, \"triCroissant\", [\n    {\n        args: [\n            59,\n            51,\n            63,\n            95,\n            64,\n            -38,\n            -21,\n            -6,\n            16,\n            44\n        ],\n        expectedResult: [\n            -38,\n            -21,\n            -6,\n            16,\n            44,\n            51,\n            59,\n            63,\n            64,\n            95\n        ]\n    },\n    {\n        args: [\n            23,\n            29,\n            -12,\n            -23,\n            40,\n            -4,\n            -40,\n            -60,\n            -98,\n            -52\n        ],\n        expectedResult: [\n            -98,\n            -60,\n            -52,\n            -40,\n            -23,\n            -12,\n            -4,\n            23,\n            29,\n            40\n        ]\n    },\n    {\n        args: [],\n        expectedResult: []\n    }\n]);\n/***********************************************************************************************************************\n * Fonction qui trie des nombres par ordre décroissant\n */ function $ad2bcec7a0192558$var$triDécroissant(...L) {\n    console.log(L);\n    return [];\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Fonction qui trie des nombres par ordre d\\xe9croissant\", $ad2bcec7a0192558$var$triDécroissant, \"triD\\xe9croissant\", [\n    {\n        args: [\n            59,\n            51,\n            63,\n            95,\n            64,\n            -38,\n            -21,\n            -6,\n            16,\n            44\n        ],\n        expectedResult: [\n            95,\n            64,\n            63,\n            59,\n            51,\n            44,\n            16,\n            -6,\n            -21,\n            -38\n        ]\n    },\n    {\n        args: [\n            23,\n            29,\n            -12,\n            -23,\n            40,\n            -4,\n            -40,\n            -60,\n            -98,\n            -52\n        ],\n        expectedResult: [\n            40,\n            29,\n            23,\n            -4,\n            -12,\n            -23,\n            -40,\n            -52,\n            -60,\n            -98\n        ]\n    },\n    {\n        args: [\n            10\n        ],\n        expectedResult: [\n            10\n        ]\n    },\n    {\n        args: [],\n        expectedResult: []\n    }\n]);\n/***********************************************************************************************************************\n * Fonction qui somme\n */ function $ad2bcec7a0192558$var$Somme(...L) {\n    console.log(L);\n    return NaN;\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Fonction qui somme\", $ad2bcec7a0192558$var$Somme, \"Somme\", [\n    {\n        args: [\n            59,\n            51,\n            63,\n            95,\n            64,\n            -38,\n            -21,\n            -6,\n            16,\n            44\n        ],\n        expectedResult: 327\n    },\n    {\n        args: [\n            23,\n            29,\n            -12,\n            -23,\n            40,\n            -4,\n            -40,\n            -60,\n            -98,\n            -52\n        ],\n        expectedResult: -197\n    },\n    {\n        args: [\n            10\n        ],\n        expectedResult: 10\n    },\n    {\n        args: [],\n        expectedResult: \"Impossible de sommer un tableau vide\",\n        errorExpected: true\n    }\n]);\n/***********************************************************************************************************************\n * Fonction qui fait la moyenne\n */ function $ad2bcec7a0192558$var$Moyenne(...L) {\n    console.log(L);\n    return NaN;\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Fonction qui fait la moyenne\", $ad2bcec7a0192558$var$Moyenne, \"Moyenne\", [\n    {\n        args: [\n            59,\n            51,\n            63,\n            95,\n            64,\n            -38,\n            -21,\n            -6,\n            16,\n            44\n        ],\n        expectedResult: 32.7\n    },\n    {\n        args: [\n            23,\n            29,\n            -12,\n            -23,\n            40,\n            -4,\n            -40,\n            -60,\n            -98,\n            -52\n        ],\n        expectedResult: -19.7\n    },\n    {\n        args: [\n            10\n        ],\n        expectedResult: 10\n    },\n    {\n        args: [],\n        expectedResult: \"Impossible de faire la moyenne d'un tableau vide\",\n        errorExpected: true\n    }\n]);\n/***********************************************************************************************************************\n * Fonction qui renvoie les nombres strictement supérieurs à un certain seuil\n * et triés par ordre croissant\n */ function $ad2bcec7a0192558$var$NombresSupérieursA(min, notes) {\n    console.log(min, notes);\n    return [];\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Les nombres strictement sup\\xe9rieurs \\xe0 un certain seuil\", $ad2bcec7a0192558$var$NombresSupérieursA, \"NombresSup\\xe9rieursA\", [\n    {\n        args: [\n            10,\n            [\n                59,\n                51,\n                63,\n                95,\n                64,\n                -38,\n                -21,\n                -6,\n                16,\n                44\n            ]\n        ],\n        expectedResult: [\n            16,\n            44,\n            51,\n            59,\n            63,\n            64,\n            95\n        ]\n    },\n    {\n        args: [\n            20,\n            [\n                59,\n                51,\n                63,\n                95,\n                64,\n                -38,\n                -21,\n                -6,\n                16,\n                44\n            ]\n        ],\n        expectedResult: [\n            44,\n            51,\n            59,\n            63,\n            64,\n            95\n        ]\n    },\n    {\n        args: [\n            50,\n            [\n                59,\n                51,\n                63,\n                95,\n                64,\n                -38,\n                -21,\n                -6,\n                16,\n                44\n            ]\n        ],\n        expectedResult: [\n            51,\n            59,\n            63,\n            64,\n            95\n        ]\n    },\n    {\n        args: [\n            50,\n            [\n                23,\n                29,\n                -12,\n                -23,\n                40,\n                -4,\n                -40,\n                -60,\n                -98,\n                -52\n            ]\n        ],\n        expectedResult: []\n    },\n    {\n        args: [\n            10,\n            []\n        ],\n        expectedResult: []\n    }\n]);\n/***********************************************************************************************************************\n * Fonction qui renvoie les nombres strictement compris entre une valeur minimale et une valeur maximale\n * et triés par ordre croissant\n */ function $ad2bcec7a0192558$var$NombresComprisEntre(min, max, notes) {\n    console.log(min, max, notes);\n    return [];\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Les nombres strictement compris entre une valeur minimale et maximale\", $ad2bcec7a0192558$var$NombresComprisEntre, \"NombresComprisEntre\", [\n    {\n        args: [\n            10,\n            20,\n            [\n                59,\n                51,\n                63,\n                95,\n                64,\n                -38,\n                -21,\n                -6,\n                16,\n                44\n            ]\n        ],\n        expectedResult: [\n            16\n        ]\n    },\n    {\n        args: [\n            0,\n            100,\n            [\n                59,\n                51,\n                63,\n                95,\n                64,\n                -38,\n                -21,\n                -6,\n                16,\n                44\n            ]\n        ],\n        expectedResult: [\n            16,\n            44,\n            51,\n            59,\n            63,\n            64,\n            95\n        ]\n    },\n    {\n        args: [\n            10,\n            20,\n            [\n                23,\n                29,\n                -12,\n                -23,\n                40,\n                -4,\n                -40,\n                -60,\n                -98,\n                -52\n            ]\n        ],\n        expectedResult: []\n    },\n    {\n        args: [\n            10,\n            20,\n            []\n        ],\n        expectedResult: []\n    }\n]);\n// function Zip<T extends unknown[]>(...M: [...{ readonly [P in keyof T]: Readonly<T[P]>[] }]): [...T][] {\nfunction $ad2bcec7a0192558$var$Zip(...M) {\n    console.log(M);\n    return [];\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Zip de tableaux\", $ad2bcec7a0192558$var$Zip, \"Zip\", [\n    {\n        args: [],\n        expectedResult: []\n    },\n    {\n        args: [\n            [\n                1,\n                2,\n                3\n            ],\n            [\n                \"a\",\n                \"b\",\n                \"c\"\n            ]\n        ],\n        expectedResult: [\n            [\n                1,\n                \"a\"\n            ],\n            [\n                2,\n                \"b\"\n            ],\n            [\n                3,\n                \"c\"\n            ]\n        ]\n    },\n    {\n        args: [\n            [\n                1,\n                2,\n                3\n            ],\n            [\n                \"a\",\n                \"b\",\n                \"c\"\n            ],\n            [\n                true,\n                false,\n                false\n            ]\n        ],\n        expectedResult: [\n            [\n                1,\n                \"a\",\n                true\n            ],\n            [\n                2,\n                \"b\",\n                false\n            ],\n            [\n                3,\n                \"c\",\n                false\n            ]\n        ]\n    },\n    {\n        args: [\n            [\n                1\n            ],\n            [\n                \"a\",\n                \"b\",\n                \"c\"\n            ],\n            [\n                true,\n                false,\n                false\n            ]\n        ],\n        expectedResult: [\n            [\n                1,\n                \"a\",\n                true\n            ],\n            [\n                undefined,\n                \"b\",\n                false\n            ],\n            [\n                undefined,\n                \"c\",\n                false\n            ]\n        ]\n    },\n    {\n        args: [\n            [\n                1,\n                2,\n                3\n            ],\n            [\n                \"a\",\n                \"b\",\n                \"c\"\n            ],\n            [\n                \"x\",\n                \"y\",\n                \"z\"\n            ],\n            [\n                true,\n                false,\n                true\n            ]\n        ],\n        expectedResult: [\n            [\n                1,\n                \"a\",\n                \"x\",\n                true\n            ],\n            [\n                2,\n                \"b\",\n                \"y\",\n                false\n            ],\n            [\n                3,\n                \"c\",\n                \"z\",\n                true\n            ]\n        ]\n    }\n]);\n/***********************************************************************************************************************\n * Produit scalaire entre deux vecteurs\n */ function $ad2bcec7a0192558$var$ProduitScalaire(V1, V2) {\n    console.log(\"ProduitScalaire\", V1, V2);\n    return 0;\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Produit scalaire entre deux vecteurs\", $ad2bcec7a0192558$var$ProduitScalaire, \"ProduitScalaire\", [\n    {\n        args: [\n            [\n                1,\n                1\n            ],\n            [\n                1,\n                1\n            ]\n        ],\n        expectedResult: 2\n    },\n    {\n        args: [\n            [\n                4,\n                1\n            ],\n            [\n                1,\n                3\n            ]\n        ],\n        expectedResult: 7\n    },\n    {\n        args: [\n            [\n                59,\n                51,\n                63,\n                95,\n                64,\n                -38,\n                -21,\n                -6,\n                16,\n                44\n            ],\n            [\n                23,\n                29,\n                -12,\n                -23,\n                40,\n                -4,\n                -40,\n                -60,\n                -98,\n                -52\n            ]\n        ],\n        expectedResult: -49\n    },\n    {\n        args: [\n            [],\n            [\n                5\n            ]\n        ],\n        expectedResult: \"Les vecteurs doivent \\xeatre non vides\",\n        errorExpected: true\n    },\n    {\n        args: [\n            [\n                5\n            ],\n            []\n        ],\n        expectedResult: \"Les vecteurs doivent \\xeatre non vides\",\n        errorExpected: true\n    },\n    {\n        args: [\n            [\n                2,\n                3\n            ],\n            [\n                4\n            ]\n        ],\n        expectedResult: \"Les vecteurs doivent \\xeatre de m\\xeame taille\",\n        errorExpected: true\n    }\n]);\n/***********************************************************************************************************************\n * Addition de matrices\n */ function $ad2bcec7a0192558$var$AjoutMatrices(M1, M2) {\n    console.log(\"AjoutMatrices\", M1, M2);\n    return [];\n}\n(0, $df5bef30413a053b$export$79a47d30cde655c4)(\"Addition de matrices\", $ad2bcec7a0192558$var$AjoutMatrices, \"AjoutMatrices\", [\n    {\n        args: [\n            [\n                [\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ],\n            [\n                [\n                    1,\n                    0\n                ],\n                [\n                    0,\n                    1\n                ]\n            ]\n        ],\n        expectedResult: [\n            [\n                2,\n                1\n            ],\n            [\n                1,\n                2\n            ]\n        ]\n    },\n    {\n        args: [\n            [\n                [\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ],\n            [\n                [\n                    1,\n                    4\n                ],\n                [\n                    0,\n                    1\n                ]\n            ]\n        ],\n        expectedResult: [\n            [\n                2,\n                5\n            ],\n            [\n                1,\n                2\n            ]\n        ]\n    },\n    {\n        args: [\n            [\n                [\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    3\n                ]\n            ],\n            [\n                [\n                    1,\n                    -4\n                ],\n                [\n                    0,\n                    1\n                ],\n                [\n                    65,\n                    -54\n                ]\n            ]\n        ],\n        expectedResult: [\n            [\n                2,\n                -3\n            ],\n            [\n                1,\n                2\n            ],\n            [\n                66,\n                -51\n            ]\n        ]\n    },\n    {\n        args: [\n            [\n                [\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ],\n            []\n        ],\n        expectedResult: \"Les matrices doivent \\xeatre non vides\",\n        errorExpected: true\n    },\n    {\n        args: [\n            [\n                [\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ],\n            [\n                5\n            ]\n        ],\n        expectedResult: \"Les matrices doivent \\xeatre de m\\xeame taille\",\n        errorExpected: true\n    },\n    {\n        args: [\n            [\n                5\n            ],\n            [\n                [\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ]\n        ],\n        expectedResult: \"Les matrices doivent \\xeatre de m\\xeame taille\",\n        errorExpected: true\n    },\n    {\n        args: [\n            [\n                [\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ],\n            [\n                [],\n                []\n            ]\n        ],\n        expectedResult: \"Les matrices doivent \\xeatre non vides\",\n        errorExpected: true\n    },\n    {\n        args: [\n            [\n                [],\n                []\n            ],\n            [\n                [\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ]\n        ],\n        expectedResult: \"Les matrices doivent \\xeatre non vides\",\n        errorExpected: true\n    },\n    {\n        args: [\n            [],\n            [\n                [\n                    5\n                ]\n            ]\n        ],\n        expectedResult: \"Les matrices doivent \\xeatre non vides\",\n        errorExpected: true\n    }\n]); /***********************************************************************************************************************\n * Codez une classe Matrice implémentant l'ajout et la multiplication de matrices.\n */ \n\n\n//# sourceMappingURL=index.54f93874.js.map\n","import './utils';\nimport { LogTests } from './utils';\n\n/***********************************************************************************************************************\n * Fonction qui renvoie le minimum de deux nombres\n */\nfunction min(a: number, b: number): number {\n    console.log(\"Ini entre\", a, \"et\", b);\n    return NaN;\n}\nLogTests(\"Fonction qui renvoie le minimum de deux nombres\", min, \"min\", [\n    {args: [17, 27], expectedResult: 17},\n    {args: [17, 15], expectedResult: 15},\n    {args: [4, 4], expectedResult: 4},\n]);\n\n\n\n\n\n\n\n\n\n/***********************************************************************************************************************\n * Fonction qui trie des nombres par ordre croissant\n */\nfunction triCroissant(...L: Readonly<number[]>): number[] {\n    console.log(L);\n    return [];\n}\nLogTests(\"Fonction qui trie des nombres par ordre croissant\", triCroissant, \"triCroissant\", [\n    {args: [59, 51, 63, 95, 64, -38, -21, -6, 16, 44], expectedResult: [-38, -21, -6, 16, 44, 51, 59, 63, 64, 95]},\n    {args: [23, 29, -12, -23, 40, -4, -40, -60, -98, -52], expectedResult: [-98, -60, -52, -40, -23, -12, -4, 23, 29, 40]},\n    {args: [], expectedResult: []}\n]);\n\n/***********************************************************************************************************************\n * Fonction qui trie des nombres par ordre décroissant\n */\nfunction triDécroissant(...L: Readonly<number[]>): number[] {\n    console.log(L);\n    return [];\n}\nLogTests(\"Fonction qui trie des nombres par ordre décroissant\", triDécroissant, 'triDécroissant', [\n    {args: [59, 51, 63, 95, 64, -38, -21, -6, 16, 44], expectedResult: [95, 64, 63, 59, 51, 44, 16, -6, -21, -38]},\n    {args: [23, 29, -12, -23, 40, -4, -40, -60, -98, -52], expectedResult: [40, 29, 23, -4, -12, -23, -40, -52, -60, -98]},\n    {args: [10], expectedResult: [10]},\n    {args: [], expectedResult: []}\n]);\n\n/***********************************************************************************************************************\n * Fonction qui somme\n */\nfunction Somme(...L: Readonly<number[]>): number {\n    console.log(L);\n    return NaN;\n}\nLogTests(\"Fonction qui somme\", Somme, \"Somme\", [\n    {args: [59, 51, 63, 95, 64, -38, -21, -6, 16, 44], expectedResult: 327},\n    {args: [23, 29, -12, -23, 40, -4, -40, -60, -98, -52], expectedResult: -197},\n    {args: [10], expectedResult: 10},\n    {args: [], expectedResult: \"Impossible de sommer un tableau vide\", errorExpected: true}\n]);\n\n\n/***********************************************************************************************************************\n * Fonction qui fait la moyenne\n */\nfunction Moyenne(...L: Readonly<number[]>): number {\n    console.log(L);\n    return NaN;\n}\nLogTests(\"Fonction qui fait la moyenne\", Moyenne, \"Moyenne\", [\n    {args: [59, 51, 63, 95, 64, -38, -21, -6, 16, 44], expectedResult: 32.7},\n    {args: [23, 29, -12, -23, 40, -4, -40, -60, -98, -52], expectedResult: -19.7},\n    {args: [10], expectedResult: 10},\n    {args: [], expectedResult: \"Impossible de faire la moyenne d'un tableau vide\", errorExpected: true}\n]);\n\n/***********************************************************************************************************************\n * Fonction qui renvoie les nombres strictement supérieurs à un certain seuil\n * et triés par ordre croissant\n */\nfunction NombresSupérieursA(min: number, notes: Readonly<number[]>): number[] {\n    console.log(min, notes);\n    return [];\n}\nLogTests(\"Les nombres strictement supérieurs à un certain seuil\", NombresSupérieursA, \"NombresSupérieursA\", [\n    {args: [10, [59, 51, 63, 95, 64, -38, -21, -6, 16, 44]], expectedResult: [16, 44, 51, 59, 63, 64, 95]},\n    {args: [20, [59, 51, 63, 95, 64, -38, -21, -6, 16, 44]], expectedResult: [44, 51, 59, 63, 64, 95]},\n    {args: [50, [59, 51, 63, 95, 64, -38, -21, -6, 16, 44]], expectedResult: [51, 59, 63, 64, 95]},\n    {args: [50, [23, 29, -12, -23, 40, -4, -40, -60, -98, -52]], expectedResult: []},\n    {args: [10, []], expectedResult: []}\n]);\n\n/***********************************************************************************************************************\n * Fonction qui renvoie les nombres strictement compris entre une valeur minimale et une valeur maximale\n * et triés par ordre croissant\n */\nfunction NombresComprisEntre(min: number, max: number, notes: Readonly<number[]>): number[] {\n    console.log(min, max, notes);\n    return [];\n}\nLogTests(\"Les nombres strictement compris entre une valeur minimale et maximale\", NombresComprisEntre, \"NombresComprisEntre\", [\n    {args: [10, 20, [59, 51, 63, 95, 64, -38, -21, -6, 16, 44]], expectedResult: [16]},\n    {args: [0, 100, [59, 51, 63, 95, 64, -38, -21, -6, 16, 44]], expectedResult: [16, 44, 51, 59, 63, 64, 95]},\n    {args: [10, 20, [23, 29, -12, -23, 40, -4, -40, -60, -98, -52]], expectedResult: []},\n    {args: [10, 20, []], expectedResult: []}\n]);\n\n\n/***********************************************************************************************************************\n * Coder la méthode zip\n * Prends en paramètre des tableaux, renvoie un tableau.\n * Chaque élément du tableau résultat à l'index i contient le tableaux les éléments d'indexes i des tableaux d'entrées.\n * exemple\n * L1 = [a, b, c]\n * L2 = [1, 2, 3]\n * L3 = [x, y, z]\n * zip(L1, L2, L3) = [\n *   [a, 1, x],\n *   [b, 2, y],\n *   [c, 3, z]\n * ]\n */\ntype ReadOnlyMatrix<T> = Readonly<Readonly<T[]>[]>;\n// function Zip<T extends unknown[]>(...M: [...{ readonly [P in keyof T]: Readonly<T[P]>[] }]): [...T][] {\nfunction Zip(...M: ReadOnlyMatrix<unknown>): unknown[][] {\n    console.log(M);\n    return [];\n}\n\nLogTests(\"Zip de tableaux\", Zip, \"Zip\", [\n    {args: [  ], expectedResult: []},\n    {args: [ [1, 2, 3], ['a', 'b', 'c'] ], expectedResult: [[1, 'a'], [2, 'b'], [3, 'c']]},\n    {args: [ [1, 2, 3], ['a', 'b', 'c'], [true, false, false] ], expectedResult: [[1, 'a', true], [2, 'b', false], [3, 'c', false]]},\n    {args: [ [1], ['a', 'b', 'c'], [true, false, false] ], expectedResult: [[1, 'a', true], [undefined, 'b', false], [undefined, 'c', false]]},\n    {args: [ [1, 2, 3], ['a', 'b', 'c'], ['x', 'y', 'z'], [true, false, true]], expectedResult: [[1, 'a', 'x', true], [2, 'b', 'y', false], [3, 'c', 'z', true]]},\n]);\n\n\n/***********************************************************************************************************************\n * Produit scalaire entre deux vecteurs\n */\nfunction ProduitScalaire(V1: Readonly<number[]>, V2: Readonly<number[]>): number {\n    console.log(\"ProduitScalaire\", V1, V2);\n    return 0;\n}\nLogTests(\"Produit scalaire entre deux vecteurs\", ProduitScalaire, \"ProduitScalaire\", [\n    {args: [[1, 1], [1, 1]], expectedResult: 2},\n    {args: [[4, 1], [1, 3]], expectedResult: 7},\n    {args: [[59, 51, 63, 95, 64, -38, -21, -6, 16, 44], [23, 29, -12, -23, 40, -4, -40, -60, -98, -52]],\n        expectedResult: -49},\n    {args: [[], [5]], expectedResult: \"Les vecteurs doivent être non vides\", errorExpected: true},\n    {args: [[5], []], expectedResult: \"Les vecteurs doivent être non vides\", errorExpected: true},\n    {args: [[2, 3], [4]], expectedResult: \"Les vecteurs doivent être de même taille\", errorExpected: true}\n]);\n\n\n/***********************************************************************************************************************\n * Addition de matrices\n */\nfunction AjoutMatrices(M1: ReadOnlyMatrix<number>, M2: ReadOnlyMatrix<number>): number[][] {\n    console.log(\"AjoutMatrices\", M1, M2);\n    return []\n}\nLogTests(\"Addition de matrices\", AjoutMatrices, \"AjoutMatrices\", [\n    {args: [ [[1, 1], [1, 1]], [[1, 0], [0, 1]] ], expectedResult: [[2, 1], [1, 2]]},\n    {args: [ [[1, 1], [1, 1]], [[1, 4], [0, 1]] ], expectedResult: [[2, 5], [1, 2]]},\n    {args: [ [[1, 1], [1, 1], [1, 3]], [[1, -4], [0, 1], [65, -54]] ], expectedResult: [[2, -3], [1, 2], [66, -51]]},\n    {args: [ [[1, 1], [1, 1]], [] ], expectedResult: \"Les matrices doivent être non vides\", errorExpected: true},\n    {args: [ [[1, 1], [1, 1]], [5] ], expectedResult: \"Les matrices doivent être de même taille\", errorExpected: true},\n    {args: [ [5], [[1, 1], [1, 1]] ], expectedResult: \"Les matrices doivent être de même taille\", errorExpected: true},\n    {args: [ [[1, 1], [1, 1]], [[], []] ], expectedResult: \"Les matrices doivent être non vides\", errorExpected: true},\n    {args: [ [[], []], [[1, 1], [1, 1]] ], expectedResult: \"Les matrices doivent être non vides\", errorExpected: true},\n    {args: [[], [[5]]], expectedResult: \"Les matrices doivent être non vides\", errorExpected: true}\n]);\n\n\n\n/***********************************************************************************************************************\n * Codez une classe Matrice implémentant l'ajout et la multiplication de matrices.\n */\n\n\n","document.onload = () => console.log( \"Le document est prêt\" );\nlet PromesseDocumentPret = new Promise( (resolve) => {\n    if (document.readyState === \"complete\") {\n        resolve();\n    } else {\n        document.onreadystatechange = () => document.readyState === \"complete\" ? resolve() : null;\n    }\n});\n\n/***********************************************************************************************************************\n * Utilitaires\n */\nexport function assertEqual<T>(a: T, b: T): boolean {\n    switch (typeof a) {\n        case \"object\":\n            return JSON.stringify(a) === JSON.stringify(b);\n        default:\n            return a === b;\n    }\n}\n\nconst template = `\n<hr/>\n<table>\n    <caption></caption>\n    <thead>\n        <th><h2></h2></th>\n    </thead>\n    <tbody></tbody>\n</table>\n`;\n\nfunction toArgs(L: any[]): string {\n    return L.map( v => JSON.stringify(v) ).join(\", \");\n}\n\nexport type Assertion = {args: any[], expectedResult: any, errorExpected?: boolean};\nexport function LogTests(title: string, fct: (...A) => any, fName: string, assertions: Assertion[]): void {\n    PromesseDocumentPret.then( () => LogTestsOK(title, fct, fName, assertions) );\n}\nexport function LogTestsOK(title: string, fct: (...A) => any, fName: string, assertions: Assertion[]): void {\n    let section = document.createElement( \"section\" ),\n        nbCorrects = 0,\n        exceptionTriggered: boolean;\n    section.innerHTML = template;\n    section.querySelector( \"h2\" ).textContent = title;\n    let tbody = section.querySelector( \"tbody\" );\n    for (let {args, expectedResult, errorExpected} of assertions) {\n        let tr  = document.createElement( \"tr\" );\n        let res;\n        try {\n            res = fct.apply(null, args);\n            exceptionTriggered = false;\n        } catch (err) {\n            res = err;\n            exceptionTriggered = true;\n        }\n        let tdI = document.createElement( \"td\" ); tr.appendChild( tdI );\n        tdI.innerHTML  = `<section><section class=\"root\"></section><pre class=\"actual\"></pre><pre class=\"expected\"></pre></section>`;\n        const sroot    = tdI.querySelector(\".root\"    ) as HTMLElement;\n        const expected = tdI.querySelector(\".expected\") as HTMLElement;\n        const actual   = tdI.querySelector(\".actual\"  ) as HTMLElement;\n        \n        sroot.textContent = `${fName}( ${toArgs(args)} )`; JSON.stringify( args );\n        actual  .textContent = `   |    get ${JSON.stringify( res )}`;\n        expected.textContent = `   | expect ${JSON.stringify( expectedResult )}`;\n        // let tdO = document.createElement( \"td\" ); tr.appendChild( tdO ); tdO.textContent = JSON.stringify( res );\n        // let tdE = document.createElement( \"td\" ); tr.appendChild( tdE ); tdE.textContent = JSON.stringify( expectedResult );\n        if (assertEqual(res, expectedResult) && (typeof errorExpected === \"undefined\" || exceptionTriggered === errorExpected) ) {\n            tr.classList.add( \"correct\" );\n            nbCorrects++;\n        } else {\n            tr.classList.add( \"incorrect\" );\n        }\n        tbody.appendChild( tr );\n    }\n    section.querySelector( \"caption\" ).textContent = `Recap: ${nbCorrects} / ${assertions.length}`;\n    document.body.appendChild( section );\n}\n"],"names":["document","onload","console","log","$df5bef30413a053b$var$PromesseDocumentPret","Promise","resolve","readyState","onreadystatechange","$df5bef30413a053b$var$template","$df5bef30413a053b$export$79a47d30cde655c4","title","fct","fName","assertions","then","$df5bef30413a053b$export$d5955f7983f287d4","section","createElement","nbCorrects","exceptionTriggered","innerHTML","querySelector","textContent","tbody","args","expectedResult","errorExpected","a","res","tr","apply","err","tdI","appendChild","sroot","expected","actual","L","map","v","JSON","stringify","join","classList","add","length","body","b","NaN","min","notes","max","M","undefined","V1","V2","M1","M2"],"version":3,"file":"index.54f93874.js.map"}